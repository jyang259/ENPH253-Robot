#include <LiquidCrystal.h>
#include <phys253.h>

//Pin allocations
int irPin_right = 0;
int irPin_left = 1;
int irPin_arm = 2;
int detectionPin_passenger = 0;
int motorPin_armExtend = 0;

//IR detection on left and right of vehicle
double leftIRSignal = 0;
double rightIRSignal = 0;

//IR detection on arm
double currentIRSignal_arm = 0;
double strongestIRSignal_arm = 0;
double locationStrongestIRSignal_arm = 0;

//checkpoint tokens
int nextStep_armLower = 0; //aimed at passenger, adjust arm height
int nextStep_extend = 0; //arm height adjusted, extend arm
int nextStep_clawClose = 0; //arm extended, close claw
int nextStep_armLift = 0; //claw closed, lift arm back up
int nextStep_clawOpen = 0; //arm lifted, open claw
int reset_arm = 0; //bring back arm and claw to initial positions

int pos = 0; //variable servo angle
double thresholdIRSignal = 3.0;

void setup() {
#include <phys253setup.txt>

  ServoTimer2 RCServo0; //Controls the rotation and position of the base
  ServoTimer2 RCServo1; //Controls ascending and descending of arm
  ServoTimer2 RCServo2; //Controls claw actuation

  //RCServo0.attach(0);
  //RCServo1.attach(1);
  //RCServo2.attach(2);
  //Initial positions
  RCServo0.write(90); //Position of the base starts in the middle
  RCServo1.write(0); //Arm starts up
  RCServo2.write(50); //Claw starts open

  //Set pin mode for microswitch passenger detection
  pinMode(detectionPin_passenger, INPUT);
  digitalWrite(detectionPin_passenger, LOW);
  //pinMode(0, OUTPUT);
  Serial.begin(9600);
}

void loop() {

  //get initial arm IR signal 
  strongestIRSignal_arm = analogRead(irPin_arm) * 5.0 / 1024.0;
  LCD.clear();
  LCD.print(strongestIRSignal_arm);
  delay(1000);

  //read in IR detection from side detectors 
  leftIRSignal = analogRead(irPin_left) * 5.0 / 1024.0;
  rightIRSignal = analogRead(irPin_right) * 5.0 / 1024.0;
  //at a certain strength, the car will stop...

  //Base rotation - Find the direction of the strongest IR signal
  //Left side
  if (leftIRSignal > thresholdIRSignal) {
    RCServo0.write(0);
    LCD.clear();
    LCD.print("Passed left");
    delay(1000);
    for (pos = 0; pos <= 90; pos++) {
      RCServo0.write(pos);
      LCD.clear();
      LCD.print(pos);
      currentIRSignal_arm = analogRead(irPin_arm) * 5.0 / 1024.0;
      if (currentIRSignal_arm > strongestIRSignal_arm) {
        strongestIRSignal_arm = currentIRSignal_arm;
        locationStrongestIRSignal_arm = pos;
        LCD.setCursor(0, 1);
        LCD.print(locationStrongestIRSignal_arm);
        LCD.setCursor(8, 1);
        LCD.print(strongestIRSignal_arm);
      }
      delay(500);
    }
    nextStep_armLower = 1;
    LCD.clear();
    LCD.print("Left - Made it!");
    delay(1000);
    LCD.setCursor(5, 0);
    LCD.print(locationStrongestIRSignal_arm);
    RCServo0.write(locationStrongestIRSignal_arm);
    //LCD.clear();
    //LCD.print("Strong IR left");
  }
  

  //Right side
  if (rightIRSignal > thresholdIRSignal) {
    RCServo0.write(180);
    LCD.clear();
    LCD.print("Passed right");
    delay(1000);
    for (pos = 180; pos >= 90; pos--) {
      RCServo0.write(pos);
      LCD.clear();
      LCD.print(pos);
      currentIRSignal_arm = analogRead(irPin_arm) * 5.0 / 1024.0;
      if (currentIRSignal_arm > strongestIRSignal_arm) {
        strongestIRSignal_arm = currentIRSignal_arm;
        locationStrongestIRSignal_arm = pos;
        LCD.setCursor(0, 1);
        LCD.print(locationStrongestIRSignal_arm);
        LCD.setCursor(8, 1);
        LCD.print(strongestIRSignal_arm);
      }
      delay(500);
    }
    nextStep_armLower = 1;
    LCD.clear();
    LCD.print("Right - Made it!");
    delay(1000);
    LCD.setCursor(5, 0);
    LCD.print(locationStrongestIRSignal_arm);
    RCServo0.write(locationStrongestIRSignal_arm);
    //LCD.clear();
    //LCD.print("Strong IR left");
  }

  if (nextStep_armLower == 1) {
    //Arm height - lower arm to height of passenger
    RCServo1.write(45);
    LCD.clear();
    LCD.print("Height change");
    delay(1000);
    nextStep_extend = 1;
    nextStep_armLower = 0 ;
  }

  if(nextStep_extend == 1){
      //Arm extension
    do{
      motor.speed(motorPin_armExtend, 25);
    }while(digitalRead(detectionPin_passenger) == LOW);
    nextStep_clawClose = 1;
    nextStep_extend = 0;
  }

    //microswitch controlling when claw closes
  if(nextStep_clawClose == 1){
    //Claw closure - picking up passenger
    RCServo2.write(115);
    LCD.clear();
    LCD.print("claw closing");
    delay(1000);
    nextStep_armLift = 1;
    nextStep_clawClose = 0;
    }

  if(nextStep_armLift == 1){
    RCServo1.write(0);
    LCD.clear();
    LCD.print("Height change");
    delay(1000);
    nextStep_armLift = 0;
    nextStep_clawOpen = 1;
  }

  if(nextStep_clawOpen == 1){
    //Claw closure - picking up passenger
    RCServo2.write(50);
    LCD.clear();
    LCD.print("claw opening");
    delay(1000);
    reset_arm = 1;
    nextStep_clawOpen = 0;
  }

  if(reset_arm == 1){
    //rest arm, claw and base to initial positions
    RCServo0.write(90); //Position of the base starts in the middle
    RCServo1.write(0); //Arm starts up
    RCServo2.write(50); //Claw starts open
    reset_arm = 0;
  }
}